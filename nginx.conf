# /etc/nginx/nginx.conf
# Check out Lets Encrypt for HTTPS
# Número de cores utilizados para resolver peticiones
worker_processes 2;
# Número de archivos que el sistema puede leer simultaneamente por core
worker_rlimit_nofile 2048;
# Por sistema: 
#                                                   worker_processes * worker_connections
# Número máximo de conexiones simultaneas   =     -------------------------------------------
#                                                 (keep_alive_timeout + avg_response_time) * 2

events {
    # Número máximo de conexiones simultaneas por core
    worker_connections 1024;
}



http {

    default_type  text/html;

	# Al prender los 3 siempre se ocupa 'nopush' con excepción del último paquete
	# en ese caso se usa 'nodelay'.
	tcp_nodelay on; # Empuja todos los paquetes aunque sean chiquitos
	tcp_nopush on; # No empuja sino que espera que sea lo suficientemente grande
	sendfile on; # Ocupa una llamada al sistema más optima


    # Compresion con gzip
    gzip on;               # enable gzip
    gzip_http_version 1.1; # turn on gzip for http 1.1 and higher
    gzip_disable "msie6";  # IE 6 had issues with gzip
    gzip_comp_level 5;     # inc compresion level, and CPU usage
    gzip_min_length 100;   # minimal weight to gzip file
    gzip_proxied any;      # enable gzip for proxied requests (e.g. CDN)
    gzip_buffers 16 8k;    # compression buffers (if we exceed this value, disk will be used instead of RAM)
    gzip_vary on;          # add header Vary Accept-Encoding (more on that in Caching section)

    gzip_types */*;


    # Tiempos de espera

    client_body_timeout   12; # Tiempo de espera para que el cliente envie el curepo
    client_header_timeout 12; # Tiempo de espera para que el cliente envie el encabezado
    send_timeout          10; # Tiempo de espera para que el servidor responda
    # .. sino se cierra la conexión.

    # Tamaño de buffer para recibir una petición
    client_body_buffer_size       24K; # Tamaño del buffer del cuerpo, si excede, se usa disco 
    client_header_buffer_size     1k; # Tamaño del buffer del encabezado 
    large_client_header_buffers   2 1k; # El respaldo por si se excede el de arriba -> I/O
    client_max_body_size          8m; # Tamaño máximo del cuerpo

    # KeepAlive Cliente - Nginx
    keepalive_disable msie6; # Desactivar keep alive para IE 6
    keepalive_requests 1000; # Peticiones permitidas sobre una misma conexión keep alive
    keepalive_timeout 100; # Tiempo de espera despues de la ultima petición antes de cerra
    
    # KeepAlive Nginx - Backend Server
    upstream backend {
        keepalive 16; # Número de conexiones máxima con backend por core asignado
	# Dirección del servidor en back, puede haber multiples, para balanceo de carga
	least_conn # Algoritmo de balanceo de carga
        server localhost:80; 
        # server localhost2:80; 
    }

	server {

		listen 81;
		server_name localhost;
		
        # Se usa el cache para optimizar la respuesta
		location ~* \.(jpg|jpeg|png|gif|ico)$ {
  			expires 1M; # Expira un mes
  			add_header Cache-Control public; # Utiliza el mismo cache para todos los usuarios : Public
  			add_header Pragma public; # Lo mismo de arriba pero para HTTP v 1.0
			add_header Vary Accept-Encoding; # Diferencia si un recurso esta comprimido o no
		}

		location / {
			return 200 "Hello root";
		}

		location /main {
			return 200 "Hello main";
		}

		location /user {
			return 200 "Hello user";
		}

         location /proxy {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
   
	}
    # TLS 
    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:!MD5;
    # ssl_prefer_server_ciphers on;

    # server {
    #   listen 443 ssl default_server;
    #   listen [::]:443 ssl default_server;

    #   ssl_certificate /etc/nginx/ssl/netguru.crt;
    #   ssl_certificate_key /etc/nginx/ssl/netguru.key;

    # }
    

    
}
